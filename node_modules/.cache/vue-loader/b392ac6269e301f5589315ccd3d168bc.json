{"remainingRequest":"D:\\software\\file\\vue-admin-beautiful-test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\file\\vue-admin-beautiful-test\\node_modules\\zx-layouts\\VabTabsBar\\index.vue?vue&type=style&index=0&id=7566d17f&lang=scss&scoped=true&","dependencies":[{"path":"D:\\software\\file\\vue-admin-beautiful-test\\node_modules\\zx-layouts\\VabTabsBar\\index.vue","mtime":499162500000},{"path":"D:\\software\\file\\vue-admin-beautiful-test\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\file\\vue-admin-beautiful-test\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\software\\file\\vue-admin-beautiful-test\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\software\\file\\vue-admin-beautiful-test\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\file\\vue-admin-beautiful-test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\file\\vue-admin-beautiful-test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRhYnMtYmFyLWNvbnRhaW5lciB7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgZGlzcGxheTogZmxleDsKICBhbGlnbi1jb250ZW50OiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgaGVpZ2h0OiAkYmFzZS10YWJzLWJhci1oZWlnaHQ7CiAgcGFkZGluZy1yaWdodDogJGJhc2UtcGFkZGluZzsKICBwYWRkaW5nLWxlZnQ6ICRiYXNlLXBhZGRpbmc7CiAgdXNlci1zZWxlY3Q6IG5vbmU7CiAgYmFja2dyb3VuZDogJGJhc2UtY29sb3Itd2hpdGU7CiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNmNmY2ZjY7CgogIDo6di1kZWVwIHsKICAgIC5mb2xkLXVuZm9sZCB7CiAgICAgIG1hcmdpbi1yaWdodDogJGJhc2UtcGFkZGluZzsKICAgIH0KICB9CgogIC50YWJzLWNvbnRlbnQgewogICAgd2lkdGg6IGNhbGMoMTAwJSAtIDkwcHgpOwogICAgaGVpZ2h0OiAkYmFzZS10YWctaXRlbS1oZWlnaHQ7CgogICAgOjp2LWRlZXAgewogICAgICAuZWwtdGFic19fbmF2LW5leHQsCiAgICAgIC5lbC10YWJzX19uYXYtcHJldiB7CiAgICAgICAgaGVpZ2h0OiAkYmFzZS10YWctaXRlbS1oZWlnaHQ7CiAgICAgICAgbGluZS1oZWlnaHQ6ICRiYXNlLXRhZy1pdGVtLWhlaWdodDsKICAgICAgfQoKICAgICAgLmVsLXRhYnNfX2hlYWRlciB7CiAgICAgICAgYm9yZGVyLWJvdHRvbTogMDsKCiAgICAgICAgLmVsLXRhYnNfX25hdiB7CiAgICAgICAgICBib3JkZXI6IDA7CiAgICAgICAgfQoKICAgICAgICAuZWwtdGFic19faXRlbSB7CiAgICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgICAgICAgaGVpZ2h0OiAkYmFzZS10YWctaXRlbS1oZWlnaHQ7CiAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDVweDsKICAgICAgICAgIGxpbmUtaGVpZ2h0OiAkYmFzZS10YWctaXRlbS1oZWlnaHQ7CiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkYmFzZS1ib3JkZXItY29sb3I7CiAgICAgICAgICBib3JkZXItcmFkaXVzOiAkYmFzZS1ib3JkZXItcmFkaXVzOwogICAgICAgICAgdHJhbnNpdGlvbjogcGFkZGluZyAwLjNzIGN1YmljLWJlemllcigwLjY0NSwgMC4wNDUsIDAuMzU1LCAxKSAhaW1wb3J0YW50OwoKICAgICAgICAgICYuaXMtYWN0aXZlIHsKICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGJhc2UtY29sb3ItYmx1ZTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9CgogIC5tb3JlIHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgY3Vyc29yOiBwb2ludGVyOwogIH0KfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"node_modules/zx-layouts/VabTabsBar","sourcesContent":["<template>\n  <div id=\"tabs-bar-container\" class=\"tabs-bar-container\">\n    <el-tabs\n      v-model=\"tabActive\"\n      type=\"card\"\n      class=\"tabs-content\"\n      @tab-click=\"handleTabClick\"\n      @tab-remove=\"handleTabRemove\"\n    >\n      <el-tab-pane\n        v-for=\"item in visitedRoutes\"\n        :key=\"item.path\"\n        :label=\"item.meta.title\"\n        :name=\"item.path\"\n        :closable=\"!isAffix(item)\"\n      ></el-tab-pane>\n    </el-tabs>\n\n    <el-dropdown @command=\"handleCommand\">\n      <span style=\"cursor: pointer\">\n        更多操作\n        <i class=\"el-icon-arrow-down el-icon--right\"></i>\n      </span>\n      <el-dropdown-menu slot=\"dropdown\" class=\"tabs-more\">\n        <!-- <el-dropdown-item command=\"refreshRoute\">\n          <vab-icon :icon=\"['fas', 'circle-notch']\" />\n          刷新\n        </el-dropdown-item> -->\n        <el-dropdown-item command=\"closeOtherstabs\">\n          <vab-icon :icon=\"['fas', 'times-circle']\" />\n          关闭其他\n        </el-dropdown-item>\n        <el-dropdown-item command=\"closeLefttabs\">\n          <vab-icon :icon=\"['fas', 'arrow-alt-circle-left']\"></vab-icon>\n          关闭左侧\n        </el-dropdown-item>\n        <el-dropdown-item command=\"closeRighttabs\">\n          <vab-icon :icon=\"['fas', 'arrow-alt-circle-right']\"></vab-icon>\n          关闭右侧\n        </el-dropdown-item>\n        <el-dropdown-item command=\"closeAlltabs\">\n          <vab-icon :icon=\"['fas', 'ban']\"></vab-icon>\n          关闭全部\n        </el-dropdown-item>\n      </el-dropdown-menu>\n    </el-dropdown>\n  </div>\n</template>\n\n<script>\n  import path from \"path\";\n  import { mapGetters } from \"vuex\";\n\n  export default {\n    name: \"VabTabsBar\",\n    data() {\n      return {\n        affixtabs: [],\n        tabActive: \"\",\n      };\n    },\n\n    computed: {\n      ...mapGetters({\n        visitedRoutes: \"tabsBar/visitedRoutes\",\n        routes: \"routes/routes\",\n      }),\n    },\n    watch: {\n      $route: {\n        handler(route) {\n          this.inittabs();\n          this.addtabs();\n          let tabActive = \"\";\n          this.visitedRoutes.forEach((item, index) => {\n            if (item.path === this.$route.path) {\n              tabActive = item.path;\n            }\n          });\n          this.tabActive = tabActive;\n        },\n        immediate: true,\n      },\n    },\n    mounted() {\n      //console.log(this.visitedRoutes);\n    },\n    methods: {\n      async handleTabRemove(tabActive) {\n        let view;\n        this.visitedRoutes.forEach((item, index) => {\n          if (tabActive == item.path) {\n            view = item;\n          }\n        });\n        const { visitedRoutes } = await this.$store.dispatch(\n          \"tabsBar/delRoute\",\n          view\n        );\n        if (this.isActive(view)) {\n          this.toLastTag(visitedRoutes, view);\n        }\n      },\n      handleTabClick(tab) {\n        const route = this.visitedRoutes.filter((item, index) => {\n          if (tab.index == index) return item;\n        })[0];\n        if (this.$route.path !== route.path) {\n          this.$router.push({\n            path: route.path,\n            query: route.query,\n            fullPath: route.fullPath,\n          });\n        } else {\n          return false;\n        }\n      },\n      isActive(route) {\n        return route.path === this.$route.path;\n      },\n      isAffix(tag) {\n        return tag.meta && tag.meta.affix;\n      },\n      filterAffixtabs(routes, basePath = \"/\") {\n        let tabs = [];\n        routes.forEach((route) => {\n          if (route.meta && route.meta.affix) {\n            const tagPath = path.resolve(basePath, route.path);\n            tabs.push({\n              fullPath: tagPath,\n              path: tagPath,\n              name: route.name,\n              meta: { ...route.meta },\n            });\n          }\n          if (route.children) {\n            const temptabs = this.filterAffixtabs(route.children, route.path);\n            if (temptabs.length >= 1) {\n              tabs = [...tabs, ...temptabs];\n            }\n          }\n        });\n        return tabs;\n      },\n      inittabs() {\n        const affixtabs = (this.affixtabs = this.filterAffixtabs(this.routes));\n        for (const tag of affixtabs) {\n          if (tag.name) {\n            this.$store.dispatch(\"tabsBar/addVisitedRoute\", tag);\n          }\n        }\n      },\n      addtabs() {\n        const { name } = this.$route;\n        if (name) {\n          this.$store.dispatch(\"tabsBar/addVisitedRoute\", this.$route);\n        }\n        return false;\n      },\n      handleCommand(command) {\n        switch (command) {\n          case \"refreshRoute\":\n            this.refreshRoute();\n            break;\n          case \"closeOtherstabs\":\n            this.closeOtherstabs();\n            break;\n          case \"closeLefttabs\":\n            this.closeLefttabs();\n            break;\n          case \"closeRighttabs\":\n            this.closeRighttabs();\n            break;\n          case \"closeAlltabs\":\n            this.closeAlltabs();\n            break;\n        }\n      },\n      async refreshRoute() {\n        this.$baseEventBus.$emit(\"reloadrouter-view\");\n      },\n      async closeSelectedTag(view) {\n        const { visitedRoutes } = await this.$store.dispatch(\n          \"tabsBar/delRoute\",\n          view\n        );\n        if (this.isActive(view)) {\n          this.toLastTag(visitedRoutes, view);\n        }\n      },\n      async closeOtherstabs() {\n        const view = await this.toThisTag();\n        await this.$store.dispatch(\"tabsBar/delOthersRoutes\", view);\n      },\n      async closeLefttabs() {\n        const view = await this.toThisTag();\n        await this.$store.dispatch(\"tabsBar/delLeftRoutes\", view);\n      },\n      async closeRighttabs() {\n        const view = await this.toThisTag();\n        await this.$store.dispatch(\"tabsBar/delRightRoutes\", view);\n      },\n      async closeAlltabs() {\n        const view = await this.toThisTag();\n        const { visitedRoutes } = await this.$store.dispatch(\n          \"tabsBar/delAllRoutes\"\n        );\n        if (this.affixtabs.some((tag) => tag.path === view.path)) {\n          return;\n        }\n        this.toLastTag(visitedRoutes, view);\n      },\n      toLastTag(visitedRoutes, view) {\n        const latestView = visitedRoutes.slice(-1)[0];\n        if (latestView) {\n          this.$router.push(latestView);\n        } else {\n          this.$router.push(\"/\");\n        }\n      },\n      async toThisTag() {\n        const view = this.visitedRoutes.filter((item, index) => {\n          if (item.path === this.$route.fullPath) {\n            return item;\n          }\n        })[0];\n        if (this.$route.path !== view.path) this.$router.push(view);\n        return view;\n      },\n    },\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .tabs-bar-container {\n    position: relative;\n    box-sizing: border-box;\n    display: flex;\n    align-content: center;\n    align-items: center;\n    justify-content: space-between;\n    height: $base-tabs-bar-height;\n    padding-right: $base-padding;\n    padding-left: $base-padding;\n    user-select: none;\n    background: $base-color-white;\n    border-top: 1px solid #f6f6f6;\n\n    ::v-deep {\n      .fold-unfold {\n        margin-right: $base-padding;\n      }\n    }\n\n    .tabs-content {\n      width: calc(100% - 90px);\n      height: $base-tag-item-height;\n\n      ::v-deep {\n        .el-tabs__nav-next,\n        .el-tabs__nav-prev {\n          height: $base-tag-item-height;\n          line-height: $base-tag-item-height;\n        }\n\n        .el-tabs__header {\n          border-bottom: 0;\n\n          .el-tabs__nav {\n            border: 0;\n          }\n\n          .el-tabs__item {\n            box-sizing: border-box;\n            height: $base-tag-item-height;\n            margin-right: 5px;\n            line-height: $base-tag-item-height;\n            border: 1px solid $base-border-color;\n            border-radius: $base-border-radius;\n            transition: padding 0.3s cubic-bezier(0.645, 0.045, 0.355, 1) !important;\n\n            &.is-active {\n              border: 1px solid $base-color-blue;\n            }\n          }\n        }\n      }\n    }\n\n    .more {\n      display: flex;\n      align-content: center;\n      align-items: center;\n      cursor: pointer;\n    }\n  }\n</style>\n"]}]}