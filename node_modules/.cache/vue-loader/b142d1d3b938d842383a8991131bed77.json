{"remainingRequest":"D:\\software\\file\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\file\\test\\src\\views\\vab\\table\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software\\file\\test\\src\\views\\vab\\table\\index.vue","mtime":1638330357804},{"path":"D:\\software\\file\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\file\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\software\\file\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\file\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IGdldExpc3QsIGRvRGVsZXRlIH0gZnJvbSAnQC9hcGkvdGFibGUnCmltcG9ydCBUYWJsZUVkaXQgZnJvbSAnLi9jb21wb25lbnRzL1RhYmxlRWRpdCcKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdDb21wcmVoZW5zaXZlVGFibGUnLAogIGNvbXBvbmVudHM6IHsKICAgIFRhYmxlRWRpdCwKICB9LAogIGZpbHRlcnM6IHsKICAgIHN0YXR1c0ZpbHRlcihzdGF0dXMpIHsKICAgICAgY29uc3Qgc3RhdHVzTWFwID0gewogICAgICAgIHB1Ymxpc2hlZDogJ3N1Y2Nlc3MnLAogICAgICAgIGRyYWZ0OiAnZ3JheScsCiAgICAgICAgZGVsZXRlZDogJ2RhbmdlcicsCiAgICAgIH0KICAgICAgcmV0dXJuIHN0YXR1c01hcFtzdGF0dXNdCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGltZ1Nob3c6IHRydWUsCiAgICAgIGxpc3Q6IFtdLAogICAgICBpbWFnZUxpc3Q6IFtdLAogICAgICBsaXN0TG9hZGluZzogdHJ1ZSwKICAgICAgbGF5b3V0OiAndG90YWwsIHNpemVzLCBwcmV2LCBwYWdlciwgbmV4dCwganVtcGVyJywKICAgICAgdG90YWw6IDAsCiAgICAgIGJhY2tncm91bmQ6IHRydWUsCiAgICAgIHNlbGVjdFJvd3M6ICcnLAogICAgICBlbGVtZW50TG9hZGluZ1RleHQ6ICfmraPlnKjliqDovb0uLi4nLAogICAgICBxdWVyeUZvcm06IHsKICAgICAgICBwYWdlTm86IDEsCiAgICAgICAgcGFnZVNpemU6IDIwLAogICAgICAgIHRpdGxlOiAnJywKICAgICAgfSwKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBoZWlnaHQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRiYXNlVGFibGVIZWlnaHQoKQogICAgfSwKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmZldGNoRGF0YSgpCiAgfSwKICBiZWZvcmVEZXN0cm95KCkge30sCiAgbW91bnRlZCgpIHt9LAogIG1ldGhvZHM6IHsKICAgIHRhYmxlU29ydENoYW5nZSgpIHsKICAgICAgY29uc3QgaW1hZ2VMaXN0ID0gW10KICAgICAgdGhpcy4kcmVmcy50YWJsZVNvcnQudGFibGVEYXRhLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7CiAgICAgICAgaW1hZ2VMaXN0LnB1c2goaXRlbS5pbWcpCiAgICAgIH0pCiAgICAgIHRoaXMuaW1hZ2VMaXN0ID0gaW1hZ2VMaXN0CiAgICB9LAogICAgc2V0U2VsZWN0Um93cyh2YWwpIHsKICAgICAgdGhpcy5zZWxlY3RSb3dzID0gdmFsCiAgICB9LAogICAgaGFuZGxlQWRkKCkgewogICAgICB0aGlzLiRyZWZzWydlZGl0J10uc2hvd0VkaXQoKQogICAgfSwKICAgIGhhbmRsZUVkaXQocm93KSB7CiAgICAgIHRoaXMuJHJlZnNbJ2VkaXQnXS5zaG93RWRpdChyb3cpCiAgICB9LAogICAgaGFuZGxlRGVsZXRlKHJvdykgewogICAgICBpZiAocm93LmlkKSB7CiAgICAgICAgdGhpcy4kYmFzZUNvbmZpcm0oJ+S9oOehruWumuimgeWIoOmZpOW9k+WJjemhueWQlycsIG51bGwsIGFzeW5jICgpID0+IHsKICAgICAgICAgIGNvbnN0IHsgbXNnIH0gPSBhd2FpdCBkb0RlbGV0ZSh7IGlkczogcm93LmlkIH0pCiAgICAgICAgICB0aGlzLiRiYXNlTWVzc2FnZShtc2csICdzdWNjZXNzJykKICAgICAgICAgIHRoaXMuZmV0Y2hEYXRhKCkKICAgICAgICB9KQogICAgICB9IGVsc2UgewogICAgICAgIGlmICh0aGlzLnNlbGVjdFJvd3MubGVuZ3RoID4gMCkgewogICAgICAgICAgY29uc3QgaWRzID0gdGhpcy5zZWxlY3RSb3dzLm1hcCgoaXRlbSkgPT4gaXRlbS5pZCkuam9pbigpCiAgICAgICAgICB0aGlzLiRiYXNlQ29uZmlybSgn5L2g56Gu5a6a6KaB5Yig6Zmk6YCJ5Lit6aG55ZCXJywgbnVsbCwgYXN5bmMgKCkgPT4gewogICAgICAgICAgICBjb25zdCB7IG1zZyB9ID0gYXdhaXQgZG9EZWxldGUoeyBpZHM6IGlkcyB9KQogICAgICAgICAgICB0aGlzLiRiYXNlTWVzc2FnZShtc2csICdzdWNjZXNzJykKICAgICAgICAgICAgdGhpcy5mZXRjaERhdGEoKQogICAgICAgICAgfSkKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy4kYmFzZU1lc3NhZ2UoJ+acqumAieS4reS7u+S9leihjCcsICdlcnJvcicpCiAgICAgICAgICByZXR1cm4gZmFsc2UKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBoYW5kbGVTaXplQ2hhbmdlKHZhbCkgewogICAgICB0aGlzLnF1ZXJ5Rm9ybS5wYWdlU2l6ZSA9IHZhbAogICAgICB0aGlzLmZldGNoRGF0YSgpCiAgICB9LAogICAgaGFuZGxlQ3VycmVudENoYW5nZSh2YWwpIHsKICAgICAgdGhpcy5xdWVyeUZvcm0ucGFnZU5vID0gdmFsCiAgICAgIHRoaXMuZmV0Y2hEYXRhKCkKICAgIH0sCiAgICBoYW5kbGVRdWVyeSgpIHsKICAgICAgdGhpcy5xdWVyeUZvcm0ucGFnZU5vID0gMQogICAgICB0aGlzLmZldGNoRGF0YSgpCiAgICB9LAogICAgYXN5bmMgZmV0Y2hEYXRhKCkgewogICAgICB0aGlzLmxpc3RMb2FkaW5nID0gdHJ1ZQogICAgICBjb25zdCB7IGRhdGEsIHRvdGFsQ291bnQgfSA9IGF3YWl0IGdldExpc3QodGhpcy5xdWVyeUZvcm0pCiAgICAgIHRoaXMubGlzdCA9IGRhdGEKICAgICAgY29uc3QgaW1hZ2VMaXN0ID0gW10KICAgICAgZGF0YS5mb3JFYWNoKChpdGVtLCBpbmRleCkgPT4gewogICAgICAgIGltYWdlTGlzdC5wdXNoKGl0ZW0uaW1nKQogICAgICB9KQogICAgICB0aGlzLmltYWdlTGlzdCA9IGltYWdlTGlzdAogICAgICB0aGlzLnRvdGFsID0gdG90YWxDb3VudAogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICB0aGlzLmxpc3RMb2FkaW5nID0gZmFsc2UKICAgICAgfSwgNTAwKQogICAgfSwKICAgIHRlc3RNZXNzYWdlKCkgewogICAgICB0aGlzLiRiYXNlTWVzc2FnZSgndGVzdDEnLCAnc3VjY2VzcycpCiAgICB9LAogICAgdGVzdEFMZXJ0KCkgewogICAgICB0aGlzLiRiYXNlQWxlcnQoJzExJykKICAgICAgdGhpcy4kYmFzZUFsZXJ0KCcxMScsICfoh6rlrprkuYnmoIfpopgnLCAoKSA9PiB7CiAgICAgICAgLyog5Y+v5Lul5YaZ5Zue6LCDOyAqLwogICAgICB9KQogICAgICB0aGlzLiRiYXNlQWxlcnQoJzExJywgbnVsbCwgKCkgPT4gewogICAgICAgIC8qIOWPr+S7peWGmeWbnuiwgzsgKi8KICAgICAgfSkKICAgIH0sCiAgICB0ZXN0Q29uZmlybSgpIHsKICAgICAgdGhpcy4kYmFzZUNvbmZpcm0oCiAgICAgICAgJ+S9oOehruWumuimgeaJp+ihjOivpeaTjeS9nD8nLAogICAgICAgIG51bGwsCiAgICAgICAgKCkgPT4gewogICAgICAgICAgLyog5Y+v5Lul5YaZ5Zue6LCDOyAqLwogICAgICAgIH0sCiAgICAgICAgKCkgPT4gewogICAgICAgICAgLyog5Y+v5Lul5YaZ5Zue6LCDOyAqLwogICAgICAgIH0KICAgICAgKQogICAgfSwKICAgIHRlc3ROb3RpZnkoKSB7CiAgICAgIHRoaXMuJGJhc2VOb3RpZnkoJ+a1i+ivlea2iOaBr+aPkOekuicsICd0ZXN0JywgJ3N1Y2Nlc3MnLCAnYm90dG9tLXJpZ2h0JykKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/views/vab/table","sourcesContent":["<template>\n  <div class=\"table-container\">\n    <vab-query-form>\n      <vab-query-form-left-panel>\n        <el-button icon=\"el-icon-plus\" type=\"primary\" @click=\"handleAdd\">\n          添加\n        </el-button>\n        <el-button icon=\"el-icon-delete\" type=\"danger\" @click=\"handleDelete\">\n          删除\n        </el-button>\n        <el-button type=\"primary\" @click=\"testMessage\">baseMessage</el-button>\n        <el-button type=\"primary\" @click=\"testALert\">baseAlert</el-button>\n        <el-button type=\"primary\" @click=\"testConfirm\">baseConfirm</el-button>\n        <el-button type=\"primary\" @click=\"testNotify\">baseNotify</el-button>\n      </vab-query-form-left-panel>\n      <vab-query-form-right-panel>\n        <el-form\n          ref=\"form\"\n          :model=\"queryForm\"\n          :inline=\"true\"\n          @submit.native.prevent\n        >\n          <el-form-item>\n            <el-input v-model=\"queryForm.title\" placeholder=\"标题\" />\n          </el-form-item>\n          <el-form-item>\n            <el-button\n              icon=\"el-icon-search\"\n              type=\"primary\"\n              native-type=\"submit\"\n              @click=\"handleQuery\"\n            >\n              查询\n            </el-button>\n          </el-form-item>\n        </el-form>\n      </vab-query-form-right-panel>\n    </vab-query-form>\n\n    <el-table\n      ref=\"tableSort\"\n      v-loading=\"listLoading\"\n      :data=\"list\"\n      :element-loading-text=\"elementLoadingText\"\n      :height=\"height\"\n      @selection-change=\"setSelectRows\"\n      @sort-change=\"tableSortChange\"\n    >\n      <el-table-column\n        show-overflow-tooltip\n        type=\"selection\"\n        width=\"55\"\n      ></el-table-column>\n      <el-table-column show-overflow-tooltip label=\"序号\" width=\"95\">\n        <template #default=\"scope\">\n          {{ scope.$index + 1 }}\n        </template>\n      </el-table-column>\n      <el-table-column\n        show-overflow-tooltip\n        prop=\"title\"\n        label=\"标题\"\n      ></el-table-column>\n      <el-table-column\n        show-overflow-tooltip\n        label=\"作者\"\n        prop=\"author\"\n      ></el-table-column>\n      <el-table-column show-overflow-tooltip label=\"头像\">\n        <template #default=\"{ row }\">\n          <el-image\n            v-if=\"imgShow\"\n            :preview-src-list=\"imageList\"\n            :src=\"row.img\"\n          ></el-image>\n        </template>\n      </el-table-column>\n      <el-table-column\n        show-overflow-tooltip\n        label=\"点击量\"\n        prop=\"pageViews\"\n        sortable\n      ></el-table-column>\n      <el-table-column show-overflow-tooltip label=\"状态\">\n        <template #default=\"{ row }\">\n          <el-tooltip\n            :content=\"row.status\"\n            class=\"item\"\n            effect=\"dark\"\n            placement=\"top-start\"\n          >\n            <el-tag :type=\"row.status | statusFilter\">\n              {{ row.status }}\n            </el-tag>\n          </el-tooltip>\n        </template>\n      </el-table-column>\n      <el-table-column\n        show-overflow-tooltip\n        label=\"时间\"\n        prop=\"datetime\"\n        width=\"200\"\n      ></el-table-column>\n      <el-table-column show-overflow-tooltip label=\"操作\" width=\"180px\">\n        <template #default=\"{ row }\">\n          <el-button type=\"text\" @click=\"handleEdit(row)\">编辑</el-button>\n          <el-button type=\"text\" @click=\"handleDelete(row)\">删除</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-pagination\n      :background=\"background\"\n      :current-page=\"queryForm.pageNo\"\n      :layout=\"layout\"\n      :page-size=\"queryForm.pageSize\"\n      :total=\"total\"\n      @current-change=\"handleCurrentChange\"\n      @size-change=\"handleSizeChange\"\n    ></el-pagination>\n    <table-edit ref=\"edit\"></table-edit>\n  </div>\n</template>\n\n<script>\n  import { getList, doDelete } from '@/api/table'\n  import TableEdit from './components/TableEdit'\n  export default {\n    name: 'ComprehensiveTable',\n    components: {\n      TableEdit,\n    },\n    filters: {\n      statusFilter(status) {\n        const statusMap = {\n          published: 'success',\n          draft: 'gray',\n          deleted: 'danger',\n        }\n        return statusMap[status]\n      },\n    },\n    data() {\n      return {\n        imgShow: true,\n        list: [],\n        imageList: [],\n        listLoading: true,\n        layout: 'total, sizes, prev, pager, next, jumper',\n        total: 0,\n        background: true,\n        selectRows: '',\n        elementLoadingText: '正在加载...',\n        queryForm: {\n          pageNo: 1,\n          pageSize: 20,\n          title: '',\n        },\n      }\n    },\n    computed: {\n      height() {\n        return this.$baseTableHeight()\n      },\n    },\n    created() {\n      this.fetchData()\n    },\n    beforeDestroy() {},\n    mounted() {},\n    methods: {\n      tableSortChange() {\n        const imageList = []\n        this.$refs.tableSort.tableData.forEach((item, index) => {\n          imageList.push(item.img)\n        })\n        this.imageList = imageList\n      },\n      setSelectRows(val) {\n        this.selectRows = val\n      },\n      handleAdd() {\n        this.$refs['edit'].showEdit()\n      },\n      handleEdit(row) {\n        this.$refs['edit'].showEdit(row)\n      },\n      handleDelete(row) {\n        if (row.id) {\n          this.$baseConfirm('你确定要删除当前项吗', null, async () => {\n            const { msg } = await doDelete({ ids: row.id })\n            this.$baseMessage(msg, 'success')\n            this.fetchData()\n          })\n        } else {\n          if (this.selectRows.length > 0) {\n            const ids = this.selectRows.map((item) => item.id).join()\n            this.$baseConfirm('你确定要删除选中项吗', null, async () => {\n              const { msg } = await doDelete({ ids: ids })\n              this.$baseMessage(msg, 'success')\n              this.fetchData()\n            })\n          } else {\n            this.$baseMessage('未选中任何行', 'error')\n            return false\n          }\n        }\n      },\n      handleSizeChange(val) {\n        this.queryForm.pageSize = val\n        this.fetchData()\n      },\n      handleCurrentChange(val) {\n        this.queryForm.pageNo = val\n        this.fetchData()\n      },\n      handleQuery() {\n        this.queryForm.pageNo = 1\n        this.fetchData()\n      },\n      async fetchData() {\n        this.listLoading = true\n        const { data, totalCount } = await getList(this.queryForm)\n        this.list = data\n        const imageList = []\n        data.forEach((item, index) => {\n          imageList.push(item.img)\n        })\n        this.imageList = imageList\n        this.total = totalCount\n        setTimeout(() => {\n          this.listLoading = false\n        }, 500)\n      },\n      testMessage() {\n        this.$baseMessage('test1', 'success')\n      },\n      testALert() {\n        this.$baseAlert('11')\n        this.$baseAlert('11', '自定义标题', () => {\n          /* 可以写回调; */\n        })\n        this.$baseAlert('11', null, () => {\n          /* 可以写回调; */\n        })\n      },\n      testConfirm() {\n        this.$baseConfirm(\n          '你确定要执行该操作?',\n          null,\n          () => {\n            /* 可以写回调; */\n          },\n          () => {\n            /* 可以写回调; */\n          }\n        )\n      },\n      testNotify() {\n        this.$baseNotify('测试消息提示', 'test', 'success', 'bottom-right')\n      },\n    },\n  }\n</script>\n"]}]}