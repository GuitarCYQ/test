{"remainingRequest":"D:\\software\\file\\test\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\software\\file\\test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\software\\file\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\file\\test\\src\\views\\index\\index.vue?vue&type=template&id=498142aa&scoped=true&","dependencies":[{"path":"D:\\software\\file\\test\\src\\views\\index\\index.vue","mtime":1638330357545},{"path":"D:\\software\\file\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\file\\test\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\software\\file\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\file\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}