{"remainingRequest":"D:\\software\\file\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\file\\test\\src\\components\\SelectTree\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software\\file\\test\\src\\components\\SelectTree\\index.vue","mtime":1638330357216},{"path":"D:\\software\\file\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\file\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\software\\file\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\file\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2VsZWN0VHJlZVRlbXBsYXRlJywKICBwcm9wczogewogICAgLyog5qCR5b2i57uT5p6E5pWw5o2uICovCiAgICB0cmVlT3B0aW9uczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiBbXQogICAgICB9LAogICAgfSwKICAgIC8qIOWNlemAiS/lpJrpgIkgKi8KICAgIHNlbGVjdFR5cGU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAoKSA9PiB7CiAgICAgICAgcmV0dXJuICdzaW5nbGUnCiAgICAgIH0sCiAgICB9LAogICAgLyog5Yid5aeL6YCJ5Lit5YC8a2V5ICovCiAgICBzZWxlY3RlZEtleTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4gJycKICAgICAgfSwKICAgIH0sCiAgICAvKiDliJ3lp4vpgInkuK3lgLxuYW1lICovCiAgICBzZWxlY3RlZFZhbHVlOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiAnJwogICAgICB9LAogICAgfSwKICAgIC8qIOWPr+WBmumAieaLqeeahOWxgue6pyAqLwogICAgc2VsZWN0TGV2ZWw6IHsKICAgICAgdHlwZTogW1N0cmluZywgTnVtYmVyXSwKICAgICAgZGVmYXVsdDogKCkgPT4gewogICAgICAgIHJldHVybiAnJwogICAgICB9LAogICAgfSwKICAgIC8qIOWPr+a4heepuumAiemhuSAqLwogICAgY2xlYXJhYmxlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6ICgpID0+IHsKICAgICAgICByZXR1cm4gdHJ1ZQogICAgICB9LAogICAgfSwKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkZWZhdWx0UHJvcHM6IHsKICAgICAgICBjaGlsZHJlbjogJ2NoaWxkcmVuJywKICAgICAgICBsYWJlbDogJ25hbWUnLAogICAgICB9LAogICAgICBkZWZhdWx0U2VsZWN0ZWRLZXlzOiBbXSwgLy/liJ3lp4vpgInkuK3lgLzmlbDnu4QKICAgICAgY3VycmVudE5vZGVLZXk6IHRoaXMuc2VsZWN0ZWRLZXksCiAgICAgIHNlbGVjdFZhbHVlOgogICAgICAgIHRoaXMuc2VsZWN0VHlwZSA9PSAnbXVsdGlwbGUnCiAgICAgICAgICA/IHRoaXMuc2VsZWN0ZWRWYWx1ZS5zcGxpdCgnLCcpCiAgICAgICAgICA6IHRoaXMuc2VsZWN0ZWRWYWx1ZSwgLy/kuIvmi4nmoYbpgInkuK3lgLxsYWJlbAogICAgICBzZWxlY3RLZXk6CiAgICAgICAgdGhpcy5zZWxlY3RUeXBlID09ICdtdWx0aXBsZScKICAgICAgICAgID8gdGhpcy5zZWxlY3RlZEtleS5zcGxpdCgnLCcpCiAgICAgICAgICA6IHRoaXMuc2VsZWN0ZWRLZXksIC8v5LiL5ouJ5qGG6YCJ5Lit5YC8dmFsdWUKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICBjb25zdCB0aGF0ID0gdGhpcwogICAgdGhpcy5pbml0VHJlZSgpCiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDliJ3lp4vljJbmoJHnmoTlgLwKICAgIGluaXRUcmVlKCkgewogICAgICBjb25zdCB0aGF0ID0gdGhpcwogICAgICBpZiAodGhhdC5zZWxlY3RlZEtleSkgewogICAgICAgIHRoYXQuZGVmYXVsdFNlbGVjdGVkS2V5cyA9IHRoYXQuc2VsZWN0ZWRLZXkuc3BsaXQoJywnKSAvLyDorr7nva7pu5jorqTlsZXlvIAKICAgICAgICBpZiAodGhhdC5zZWxlY3RUeXBlID09ICdzaW5nbGUnKSB7CiAgICAgICAgICB0aGF0LiRyZWZzLnRyZWVPcHRpb24uc2V0Q3VycmVudEtleSh0aGF0LnNlbGVjdGVkS2V5KSAvLyDorr7nva7pu5jorqTpgInkuK0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhhdC4kcmVmcy50cmVlT3B0aW9uLnNldENoZWNrZWRLZXlzKHRoYXQuZGVmYXVsdFNlbGVjdGVkS2V5cykKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAvLyDmuIXpmaTpgInkuK0KICAgIGNsZWFySGFuZGxlKCkgewogICAgICBjb25zdCB0aGF0ID0gdGhpcwogICAgICB0aGlzLnNlbGVjdFZhbHVlID0gJycKICAgICAgdGhpcy5zZWxlY3RLZXkgPSAnJwogICAgICB0aGlzLmRlZmF1bHRTZWxlY3RlZEtleXMgPSBbXQogICAgICB0aGlzLmN1cnJlbnROb2RlS2V5ID0gJycKICAgICAgdGhpcy5jbGVhclNlbGVjdGVkKCkKICAgICAgaWYgKHRoYXQuc2VsZWN0VHlwZSA9PSAnc2luZ2xlJykgewogICAgICAgIHRoYXQuJHJlZnMudHJlZU9wdGlvbi5zZXRDdXJyZW50S2V5KCcnKSAvLyDorr7nva7pu5jorqTpgInkuK0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aGF0LiRyZWZzLnRyZWVPcHRpb24uc2V0Q2hlY2tlZEtleXMoW10pCiAgICAgIH0KICAgIH0sCiAgICAvKiDmuIXnqbrpgInkuK3moLflvI8gKi8KICAgIGNsZWFyU2VsZWN0ZWQoKSB7CiAgICAgIGNvbnN0IGFsbE5vZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjdHJlZU9wdGlvbiAuZWwtdHJlZS1ub2RlJykKICAgICAgYWxsTm9kZS5mb3JFYWNoKChlbGVtZW50KSA9PiBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoJ2lzLWN1cnJlbnQnKSkKICAgIH0sCiAgICAvLyBzZWxlY3TlpJrpgInml7bnp7vpmaTmn5Dpobnmk43kvZwKICAgIHJlbW92ZVRhZyh2YWwpIHsKICAgICAgdGhpcy4kcmVmcy50cmVlT3B0aW9uLnNldENoZWNrZWRLZXlzKFtdKQogICAgfSwKICAgIC8vIOeCueWHu+WPtuWtkOiKgueCuQogICAgbm9kZUNsaWNrKGRhdGEsIG5vZGUsIGVsKSB7CiAgICAgIGlmIChkYXRhLnJhbmsgPj0gdGhpcy5zZWxlY3RMZXZlbCkgewogICAgICAgIHRoaXMuc2VsZWN0VmFsdWUgPSBkYXRhLm5hbWUKICAgICAgICB0aGlzLnNlbGVjdEtleSA9IGRhdGEuaWQKICAgICAgfQogICAgfSwKICAgIC8vIOiKgueCuemAieS4reaTjeS9nAogICAgY2hlY2tOb2RlKGRhdGEsIG5vZGUsIGVsKSB7CiAgICAgIGNvbnN0IGNoZWNrZWROb2RlcyA9IHRoaXMuJHJlZnMudHJlZU9wdGlvbi5nZXRDaGVja2VkTm9kZXMoKQogICAgICBjb25zdCBrZXlBcnIgPSBbXQogICAgICBjb25zdCB2YWx1ZUFyciA9IFtdCiAgICAgIGNoZWNrZWROb2Rlcy5mb3JFYWNoKChpdGVtKSA9PiB7CiAgICAgICAgaWYgKGl0ZW0ucmFuayA+PSB0aGlzLnNlbGVjdExldmVsKSB7CiAgICAgICAgICBrZXlBcnIucHVzaChpdGVtLmlkKQogICAgICAgICAgdmFsdWVBcnIucHVzaChpdGVtLm5hbWUpCiAgICAgICAgfQogICAgICB9KQogICAgICB0aGlzLnNlbGVjdFZhbHVlID0gdmFsdWVBcnIKICAgICAgdGhpcy5zZWxlY3RLZXkgPSBrZXlBcnIKICAgIH0sCiAgfSwKfQo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"index.vue","sourceRoot":"src/components/SelectTree","sourcesContent":["<template>\n  <div class=\"select-tree-template\">\n    <el-select\n      v-model=\"selectValue\"\n      :clearable=\"clearable\"\n      :collapse-tags=\"selectType == 'multiple'\"\n      :multiple=\"selectType == 'multiple'\"\n      class=\"vab-tree-select\"\n      value-key=\"id\"\n      @clear=\"clearHandle\"\n      @remove-tag=\"removeTag\"\n    >\n      <el-option :value=\"selectKey\">\n        <el-tree\n          id=\"treeOption\"\n          ref=\"treeOption\"\n          :current-node-key=\"currentNodeKey\"\n          :data=\"treeOptions\"\n          :default-checked-keys=\"defaultSelectedKeys\"\n          :default-expanded-keys=\"defaultSelectedKeys\"\n          :highlight-current=\"true\"\n          :props=\"defaultProps\"\n          :show-checkbox=\"selectType == 'multiple'\"\n          node-key=\"id\"\n          @check=\"checkNode\"\n          @node-click=\"nodeClick\"\n        ></el-tree>\n      </el-option>\n    </el-select>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'SelectTreeTemplate',\n    props: {\n      /* 树形结构数据 */\n      treeOptions: {\n        type: Array,\n        default: () => {\n          return []\n        },\n      },\n      /* 单选/多选 */\n      selectType: {\n        type: String,\n        default: () => {\n          return 'single'\n        },\n      },\n      /* 初始选中值key */\n      selectedKey: {\n        type: String,\n        default: () => {\n          return ''\n        },\n      },\n      /* 初始选中值name */\n      selectedValue: {\n        type: String,\n        default: () => {\n          return ''\n        },\n      },\n      /* 可做选择的层级 */\n      selectLevel: {\n        type: [String, Number],\n        default: () => {\n          return ''\n        },\n      },\n      /* 可清空选项 */\n      clearable: {\n        type: Boolean,\n        default: () => {\n          return true\n        },\n      },\n    },\n    data() {\n      return {\n        defaultProps: {\n          children: 'children',\n          label: 'name',\n        },\n        defaultSelectedKeys: [], //初始选中值数组\n        currentNodeKey: this.selectedKey,\n        selectValue:\n          this.selectType == 'multiple'\n            ? this.selectedValue.split(',')\n            : this.selectedValue, //下拉框选中值label\n        selectKey:\n          this.selectType == 'multiple'\n            ? this.selectedKey.split(',')\n            : this.selectedKey, //下拉框选中值value\n      }\n    },\n    mounted() {\n      const that = this\n      this.initTree()\n    },\n    methods: {\n      // 初始化树的值\n      initTree() {\n        const that = this\n        if (that.selectedKey) {\n          that.defaultSelectedKeys = that.selectedKey.split(',') // 设置默认展开\n          if (that.selectType == 'single') {\n            that.$refs.treeOption.setCurrentKey(that.selectedKey) // 设置默认选中\n          } else {\n            that.$refs.treeOption.setCheckedKeys(that.defaultSelectedKeys)\n          }\n        }\n      },\n      // 清除选中\n      clearHandle() {\n        const that = this\n        this.selectValue = ''\n        this.selectKey = ''\n        this.defaultSelectedKeys = []\n        this.currentNodeKey = ''\n        this.clearSelected()\n        if (that.selectType == 'single') {\n          that.$refs.treeOption.setCurrentKey('') // 设置默认选中\n        } else {\n          that.$refs.treeOption.setCheckedKeys([])\n        }\n      },\n      /* 清空选中样式 */\n      clearSelected() {\n        const allNode = document.querySelectorAll('#treeOption .el-tree-node')\n        allNode.forEach((element) => element.classList.remove('is-current'))\n      },\n      // select多选时移除某项操作\n      removeTag(val) {\n        this.$refs.treeOption.setCheckedKeys([])\n      },\n      // 点击叶子节点\n      nodeClick(data, node, el) {\n        if (data.rank >= this.selectLevel) {\n          this.selectValue = data.name\n          this.selectKey = data.id\n        }\n      },\n      // 节点选中操作\n      checkNode(data, node, el) {\n        const checkedNodes = this.$refs.treeOption.getCheckedNodes()\n        const keyArr = []\n        const valueArr = []\n        checkedNodes.forEach((item) => {\n          if (item.rank >= this.selectLevel) {\n            keyArr.push(item.id)\n            valueArr.push(item.name)\n          }\n        })\n        this.selectValue = valueArr\n        this.selectKey = keyArr\n      },\n    },\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .el-scrollbar .el-scrollbar__view .el-select-dropdown__item {\n    height: auto;\n    max-height: 274px;\n    padding: 0;\n    overflow-y: auto;\n  }\n\n  .el-select-dropdown__item.selected {\n    font-weight: normal;\n  }\n\n  ul li > .el-tree .el-tree-node__content {\n    height: auto;\n    padding: 0 20px;\n  }\n\n  .el-tree-node__label {\n    font-weight: normal;\n  }\n\n  .el-tree > .is-current .el-tree-node__label {\n    font-weight: 700;\n    color: #409eff;\n  }\n\n  .el-tree > .is-current .el-tree-node__children .el-tree-node__label {\n    font-weight: normal;\n    color: #606266;\n  }\n</style>\n<style lang=\"scss\">\n  /* .vab-tree-select{\n      .el-tag__close.el-icon-close{\n        width:0;\n        overflow:hidden;\n      }\n    } */\n</style>\n"]}]}