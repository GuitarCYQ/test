{"remainingRequest":"D:\\software\\file\\test\\node_modules\\babel-loader\\lib\\index.js!D:\\software\\file\\test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\software\\file\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\file\\test\\src\\components\\SelectTree\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software\\file\\test\\src\\components\\SelectTree\\index.vue","mtime":1638330357216},{"path":"D:\\software\\file\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\file\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\software\\file\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\file\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdTZWxlY3RUcmVlVGVtcGxhdGUnLAogIHByb3BzOiB7CiAgICAvKiDmoJHlvaLnu5PmnoTmlbDmja4gKi8KICAgIHRyZWVPcHRpb25zOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCgogICAgLyog5Y2V6YCJL+WkmumAiSAqLwogICAgc2VsZWN0VHlwZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiAnc2luZ2xlJzsKICAgICAgfQogICAgfSwKCiAgICAvKiDliJ3lp4vpgInkuK3lgLxrZXkgKi8KICAgIHNlbGVjdGVkS2V5OiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuICcnOwogICAgICB9CiAgICB9LAoKICAgIC8qIOWIneWni+mAieS4reWAvG5hbWUgKi8KICAgIHNlbGVjdGVkVmFsdWU6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0KICAgIH0sCgogICAgLyog5Y+v5YGa6YCJ5oup55qE5bGC57qnICovCiAgICBzZWxlY3RMZXZlbDogewogICAgICB0eXBlOiBbU3RyaW5nLCBOdW1iZXJdLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gJyc7CiAgICAgIH0KICAgIH0sCgogICAgLyog5Y+v5riF56m66YCJ6aG5ICovCiAgICBjbGVhcmFibGU6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkZWZhdWx0UHJvcHM6IHsKICAgICAgICBjaGlsZHJlbjogJ2NoaWxkcmVuJywKICAgICAgICBsYWJlbDogJ25hbWUnCiAgICAgIH0sCiAgICAgIGRlZmF1bHRTZWxlY3RlZEtleXM6IFtdLAogICAgICAvL+WIneWni+mAieS4reWAvOaVsOe7hAogICAgICBjdXJyZW50Tm9kZUtleTogdGhpcy5zZWxlY3RlZEtleSwKICAgICAgc2VsZWN0VmFsdWU6IHRoaXMuc2VsZWN0VHlwZSA9PSAnbXVsdGlwbGUnID8gdGhpcy5zZWxlY3RlZFZhbHVlLnNwbGl0KCcsJykgOiB0aGlzLnNlbGVjdGVkVmFsdWUsCiAgICAgIC8v5LiL5ouJ5qGG6YCJ5Lit5YC8bGFiZWwKICAgICAgc2VsZWN0S2V5OiB0aGlzLnNlbGVjdFR5cGUgPT0gJ211bHRpcGxlJyA/IHRoaXMuc2VsZWN0ZWRLZXkuc3BsaXQoJywnKSA6IHRoaXMuc2VsZWN0ZWRLZXkgLy/kuIvmi4nmoYbpgInkuK3lgLx2YWx1ZQoKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIHRoYXQgPSB0aGlzOwogICAgdGhpcy5pbml0VHJlZSgpOwogIH0sCiAgbWV0aG9kczogewogICAgLy8g5Yid5aeL5YyW5qCR55qE5YC8CiAgICBpbml0VHJlZTogZnVuY3Rpb24gaW5pdFRyZWUoKSB7CiAgICAgIHZhciB0aGF0ID0gdGhpczsKCiAgICAgIGlmICh0aGF0LnNlbGVjdGVkS2V5KSB7CiAgICAgICAgdGhhdC5kZWZhdWx0U2VsZWN0ZWRLZXlzID0gdGhhdC5zZWxlY3RlZEtleS5zcGxpdCgnLCcpOyAvLyDorr7nva7pu5jorqTlsZXlvIAKCiAgICAgICAgaWYgKHRoYXQuc2VsZWN0VHlwZSA9PSAnc2luZ2xlJykgewogICAgICAgICAgdGhhdC4kcmVmcy50cmVlT3B0aW9uLnNldEN1cnJlbnRLZXkodGhhdC5zZWxlY3RlZEtleSk7IC8vIOiuvue9rum7mOiupOmAieS4rQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGF0LiRyZWZzLnRyZWVPcHRpb24uc2V0Q2hlY2tlZEtleXModGhhdC5kZWZhdWx0U2VsZWN0ZWRLZXlzKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAvLyDmuIXpmaTpgInkuK0KICAgIGNsZWFySGFuZGxlOiBmdW5jdGlvbiBjbGVhckhhbmRsZSgpIHsKICAgICAgdmFyIHRoYXQgPSB0aGlzOwogICAgICB0aGlzLnNlbGVjdFZhbHVlID0gJyc7CiAgICAgIHRoaXMuc2VsZWN0S2V5ID0gJyc7CiAgICAgIHRoaXMuZGVmYXVsdFNlbGVjdGVkS2V5cyA9IFtdOwogICAgICB0aGlzLmN1cnJlbnROb2RlS2V5ID0gJyc7CiAgICAgIHRoaXMuY2xlYXJTZWxlY3RlZCgpOwoKICAgICAgaWYgKHRoYXQuc2VsZWN0VHlwZSA9PSAnc2luZ2xlJykgewogICAgICAgIHRoYXQuJHJlZnMudHJlZU9wdGlvbi5zZXRDdXJyZW50S2V5KCcnKTsgLy8g6K6+572u6buY6K6k6YCJ5LitCiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhhdC4kcmVmcy50cmVlT3B0aW9uLnNldENoZWNrZWRLZXlzKFtdKTsKICAgICAgfQogICAgfSwKCiAgICAvKiDmuIXnqbrpgInkuK3moLflvI8gKi8KICAgIGNsZWFyU2VsZWN0ZWQ6IGZ1bmN0aW9uIGNsZWFyU2VsZWN0ZWQoKSB7CiAgICAgIHZhciBhbGxOb2RlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI3RyZWVPcHRpb24gLmVsLXRyZWUtbm9kZScpOwogICAgICBhbGxOb2RlLmZvckVhY2goZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICByZXR1cm4gZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKCdpcy1jdXJyZW50Jyk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIHNlbGVjdOWkmumAieaXtuenu+mZpOafkOmhueaTjeS9nAogICAgcmVtb3ZlVGFnOiBmdW5jdGlvbiByZW1vdmVUYWcodmFsKSB7CiAgICAgIHRoaXMuJHJlZnMudHJlZU9wdGlvbi5zZXRDaGVja2VkS2V5cyhbXSk7CiAgICB9LAogICAgLy8g54K55Ye75Y+25a2Q6IqC54K5CiAgICBub2RlQ2xpY2s6IGZ1bmN0aW9uIG5vZGVDbGljayhkYXRhLCBub2RlLCBlbCkgewogICAgICBpZiAoZGF0YS5yYW5rID49IHRoaXMuc2VsZWN0TGV2ZWwpIHsKICAgICAgICB0aGlzLnNlbGVjdFZhbHVlID0gZGF0YS5uYW1lOwogICAgICAgIHRoaXMuc2VsZWN0S2V5ID0gZGF0YS5pZDsKICAgICAgfQogICAgfSwKICAgIC8vIOiKgueCuemAieS4reaTjeS9nAogICAgY2hlY2tOb2RlOiBmdW5jdGlvbiBjaGVja05vZGUoZGF0YSwgbm9kZSwgZWwpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBjaGVja2VkTm9kZXMgPSB0aGlzLiRyZWZzLnRyZWVPcHRpb24uZ2V0Q2hlY2tlZE5vZGVzKCk7CiAgICAgIHZhciBrZXlBcnIgPSBbXTsKICAgICAgdmFyIHZhbHVlQXJyID0gW107CiAgICAgIGNoZWNrZWROb2Rlcy5mb3JFYWNoKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgaWYgKGl0ZW0ucmFuayA+PSBfdGhpcy5zZWxlY3RMZXZlbCkgewogICAgICAgICAga2V5QXJyLnB1c2goaXRlbS5pZCk7CiAgICAgICAgICB2YWx1ZUFyci5wdXNoKGl0ZW0ubmFtZSk7CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdGhpcy5zZWxlY3RWYWx1ZSA9IHZhbHVlQXJyOwogICAgICB0aGlzLnNlbGVjdEtleSA9IGtleUFycjsKICAgIH0KICB9Cn07"},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"select-tree-template\">\n    <el-select\n      v-model=\"selectValue\"\n      :clearable=\"clearable\"\n      :collapse-tags=\"selectType == 'multiple'\"\n      :multiple=\"selectType == 'multiple'\"\n      class=\"vab-tree-select\"\n      value-key=\"id\"\n      @clear=\"clearHandle\"\n      @remove-tag=\"removeTag\"\n    >\n      <el-option :value=\"selectKey\">\n        <el-tree\n          id=\"treeOption\"\n          ref=\"treeOption\"\n          :current-node-key=\"currentNodeKey\"\n          :data=\"treeOptions\"\n          :default-checked-keys=\"defaultSelectedKeys\"\n          :default-expanded-keys=\"defaultSelectedKeys\"\n          :highlight-current=\"true\"\n          :props=\"defaultProps\"\n          :show-checkbox=\"selectType == 'multiple'\"\n          node-key=\"id\"\n          @check=\"checkNode\"\n          @node-click=\"nodeClick\"\n        ></el-tree>\n      </el-option>\n    </el-select>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'SelectTreeTemplate',\n    props: {\n      /* 树形结构数据 */\n      treeOptions: {\n        type: Array,\n        default: () => {\n          return []\n        },\n      },\n      /* 单选/多选 */\n      selectType: {\n        type: String,\n        default: () => {\n          return 'single'\n        },\n      },\n      /* 初始选中值key */\n      selectedKey: {\n        type: String,\n        default: () => {\n          return ''\n        },\n      },\n      /* 初始选中值name */\n      selectedValue: {\n        type: String,\n        default: () => {\n          return ''\n        },\n      },\n      /* 可做选择的层级 */\n      selectLevel: {\n        type: [String, Number],\n        default: () => {\n          return ''\n        },\n      },\n      /* 可清空选项 */\n      clearable: {\n        type: Boolean,\n        default: () => {\n          return true\n        },\n      },\n    },\n    data() {\n      return {\n        defaultProps: {\n          children: 'children',\n          label: 'name',\n        },\n        defaultSelectedKeys: [], //初始选中值数组\n        currentNodeKey: this.selectedKey,\n        selectValue:\n          this.selectType == 'multiple'\n            ? this.selectedValue.split(',')\n            : this.selectedValue, //下拉框选中值label\n        selectKey:\n          this.selectType == 'multiple'\n            ? this.selectedKey.split(',')\n            : this.selectedKey, //下拉框选中值value\n      }\n    },\n    mounted() {\n      const that = this\n      this.initTree()\n    },\n    methods: {\n      // 初始化树的值\n      initTree() {\n        const that = this\n        if (that.selectedKey) {\n          that.defaultSelectedKeys = that.selectedKey.split(',') // 设置默认展开\n          if (that.selectType == 'single') {\n            that.$refs.treeOption.setCurrentKey(that.selectedKey) // 设置默认选中\n          } else {\n            that.$refs.treeOption.setCheckedKeys(that.defaultSelectedKeys)\n          }\n        }\n      },\n      // 清除选中\n      clearHandle() {\n        const that = this\n        this.selectValue = ''\n        this.selectKey = ''\n        this.defaultSelectedKeys = []\n        this.currentNodeKey = ''\n        this.clearSelected()\n        if (that.selectType == 'single') {\n          that.$refs.treeOption.setCurrentKey('') // 设置默认选中\n        } else {\n          that.$refs.treeOption.setCheckedKeys([])\n        }\n      },\n      /* 清空选中样式 */\n      clearSelected() {\n        const allNode = document.querySelectorAll('#treeOption .el-tree-node')\n        allNode.forEach((element) => element.classList.remove('is-current'))\n      },\n      // select多选时移除某项操作\n      removeTag(val) {\n        this.$refs.treeOption.setCheckedKeys([])\n      },\n      // 点击叶子节点\n      nodeClick(data, node, el) {\n        if (data.rank >= this.selectLevel) {\n          this.selectValue = data.name\n          this.selectKey = data.id\n        }\n      },\n      // 节点选中操作\n      checkNode(data, node, el) {\n        const checkedNodes = this.$refs.treeOption.getCheckedNodes()\n        const keyArr = []\n        const valueArr = []\n        checkedNodes.forEach((item) => {\n          if (item.rank >= this.selectLevel) {\n            keyArr.push(item.id)\n            valueArr.push(item.name)\n          }\n        })\n        this.selectValue = valueArr\n        this.selectKey = keyArr\n      },\n    },\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .el-scrollbar .el-scrollbar__view .el-select-dropdown__item {\n    height: auto;\n    max-height: 274px;\n    padding: 0;\n    overflow-y: auto;\n  }\n\n  .el-select-dropdown__item.selected {\n    font-weight: normal;\n  }\n\n  ul li > .el-tree .el-tree-node__content {\n    height: auto;\n    padding: 0 20px;\n  }\n\n  .el-tree-node__label {\n    font-weight: normal;\n  }\n\n  .el-tree > .is-current .el-tree-node__label {\n    font-weight: 700;\n    color: #409eff;\n  }\n\n  .el-tree > .is-current .el-tree-node__children .el-tree-node__label {\n    font-weight: normal;\n    color: #606266;\n  }\n</style>\n<style lang=\"scss\">\n  /* .vab-tree-select{\n      .el-tag__close.el-icon-close{\n        width:0;\n        overflow:hidden;\n      }\n    } */\n</style>\n"],"sourceRoot":"src/components/SelectTree"}]}