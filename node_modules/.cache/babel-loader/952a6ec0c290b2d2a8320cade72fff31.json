{"remainingRequest":"D:\\software\\file\\test\\node_modules\\babel-loader\\lib\\index.js!D:\\software\\file\\test\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\software\\file\\test\\mock\\controller\\table.js","dependencies":[{"path":"D:\\software\\file\\test\\mock\\controller\\table.js","mtime":1638330357027},{"path":"D:\\software\\file\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\file\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\software\\file\\test\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:cmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyIpOwoKcmVxdWlyZSgiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mLmpzIik7Cgp2YXIgX3JlcXVpcmUgPSByZXF1aXJlKCdtb2NranMnKSwKICAgIG1vY2sgPSBfcmVxdWlyZS5tb2NrOwoKdmFyIF9yZXF1aXJlMiA9IHJlcXVpcmUoJy4uL3V0aWxzJyksCiAgICBoYW5kbGVSYW5kb21JbWFnZSA9IF9yZXF1aXJlMi5oYW5kbGVSYW5kb21JbWFnZTsKCnZhciBMaXN0ID0gW107CnZhciBjb3VudCA9IDk5OTsKCmZvciAodmFyIGkgPSAwOyBpIDwgY291bnQ7IGkrKykgewogIExpc3QucHVzaChtb2NrKHsKICAgIHV1aWQ6ICdAdXVpZCcsCiAgICBpZDogJ0BpZCcsCiAgICB0aXRsZTogJ0Bjc2VudGVuY2UoMSwgMiknLAogICAgJ3N0YXR1c3wxJzogWydwdWJsaXNoZWQnLCAnZHJhZnQnLCAnZGVsZXRlZCddLAogICAgYXV0aG9yOiAnQGNuYW1lJywKICAgIGRhdGV0aW1lOiAnQGRhdGV0aW1lJywKICAgIHBhZ2VWaWV3czogJ0BpbnRlZ2VyKDMwMCwgNTAwMCknLAogICAgaW1nOiBoYW5kbGVSYW5kb21JbWFnZSgyMDAsIDIwMCksCiAgICBzbWFsbEltZzogaGFuZGxlUmFuZG9tSW1hZ2UoNDAsIDQwKSwKICAgIHN3aXRjaDogJ0Bib29sZWFuJywKICAgIHBlcmNlbnQ6ICdAaW50ZWdlcig4MCw5OSknCiAgfSkpOwp9Cgptb2R1bGUuZXhwb3J0cyA9IFt7CiAgdXJsOiAnL3RhYmxlL2dldExpc3QnLAogIHR5cGU6ICdwb3N0JywKICByZXNwb25zZTogZnVuY3Rpb24gcmVzcG9uc2UoY29uZmlnKSB7CiAgICBpZiAoIWNvbmZpZy5ib2R5KSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgY29kZTogMjAwLAogICAgICAgIG1zZzogJ3N1Y2Nlc3MnLAogICAgICAgIHRvdGFsQ291bnQ6IGNvdW50LAogICAgICAgIGRhdGE6IG1vY2soewogICAgICAgICAgJ2RhdGF8NTAnOiBbewogICAgICAgICAgICBpZDogJ0BpZCcsCiAgICAgICAgICAgIHRpdGxlOiAnQGNzZW50ZW5jZSgxLCAyKScsCiAgICAgICAgICAgICdzdGF0dXN8MSc6IFsncHVibGlzaGVkJywgJ2RyYWZ0JywgJ2RlbGV0ZWQnXSwKICAgICAgICAgICAgYXV0aG9yOiAnQGNuYW1lJywKICAgICAgICAgICAgZGF0ZXRpbWU6ICdAZGF0ZXRpbWUnLAogICAgICAgICAgICBwYWdlVmlld3M6ICdAaW50ZWdlcigzMDAsIDUwMDApJywKICAgICAgICAgICAgaW1nOiBoYW5kbGVSYW5kb21JbWFnZSgyMDAsIDIwMCksCiAgICAgICAgICAgIHNtYWxsSW1nOiBoYW5kbGVSYW5kb21JbWFnZSg0MCwgNDApLAogICAgICAgICAgICBzd2l0Y2g6ICdAYm9vbGVhbicsCiAgICAgICAgICAgIHBlcmNlbnQ6ICdAaW50ZWdlcig4MCw5OSknCiAgICAgICAgICB9XQogICAgICAgIH0pLmRhdGEKICAgICAgfTsKICAgIH0KCiAgICB2YXIgX2NvbmZpZyRib2R5ID0gY29uZmlnLmJvZHksCiAgICAgICAgX2NvbmZpZyRib2R5JHRpdGxlID0gX2NvbmZpZyRib2R5LnRpdGxlLAogICAgICAgIHRpdGxlID0gX2NvbmZpZyRib2R5JHRpdGxlID09PSB2b2lkIDAgPyAnJyA6IF9jb25maWckYm9keSR0aXRsZSwKICAgICAgICBfY29uZmlnJGJvZHkkcGFnZU5vID0gX2NvbmZpZyRib2R5LnBhZ2VObywKICAgICAgICBwYWdlTm8gPSBfY29uZmlnJGJvZHkkcGFnZU5vID09PSB2b2lkIDAgPyAxIDogX2NvbmZpZyRib2R5JHBhZ2VObywKICAgICAgICBfY29uZmlnJGJvZHkkcGFnZVNpemUgPSBfY29uZmlnJGJvZHkucGFnZVNpemUsCiAgICAgICAgcGFnZVNpemUgPSBfY29uZmlnJGJvZHkkcGFnZVNpemUgPT09IHZvaWQgMCA/IDIwIDogX2NvbmZpZyRib2R5JHBhZ2VTaXplOwogICAgdmFyIG1vY2tMaXN0ID0gTGlzdC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgcmV0dXJuICEodGl0bGUgJiYgaXRlbS50aXRsZS5pbmRleE9mKHRpdGxlKSA8IDApOwogICAgfSk7CiAgICB2YXIgcGFnZUxpc3QgPSBtb2NrTGlzdC5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0sIGluZGV4KSB7CiAgICAgIHJldHVybiBpbmRleCA8IHBhZ2VTaXplICogcGFnZU5vICYmIGluZGV4ID49IHBhZ2VTaXplICogKHBhZ2VObyAtIDEpOwogICAgfSk7CiAgICByZXR1cm4gewogICAgICBjb2RlOiAyMDAsCiAgICAgIG1zZzogJ3N1Y2Nlc3MnLAogICAgICB0b3RhbENvdW50OiBjb3VudCwKICAgICAgZGF0YTogcGFnZUxpc3QKICAgIH07CiAgfQp9LCB7CiAgdXJsOiAnL3RhYmxlL2RvRWRpdCcsCiAgdHlwZTogJ3Bvc3QnLAogIHJlc3BvbnNlOiBmdW5jdGlvbiByZXNwb25zZSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNvZGU6IDIwMCwKICAgICAgbXNnOiAn5qih5ouf5L+d5a2Y5oiQ5YqfJwogICAgfTsKICB9Cn0sIHsKICB1cmw6ICcvdGFibGUvZG9EZWxldGUnLAogIHR5cGU6ICdwb3N0JywKICByZXNwb25zZTogZnVuY3Rpb24gcmVzcG9uc2UoKSB7CiAgICByZXR1cm4gewogICAgICBjb2RlOiAyMDAsCiAgICAgIG1zZzogJ+aooeaLn+WIoOmZpOaIkOWKnycKICAgIH07CiAgfQp9XTs="},{"version":3,"sources":["D:/software/file/test/mock/controller/table.js"],"names":["require","mock","handleRandomImage","List","count","i","push","uuid","id","title","author","datetime","pageViews","img","smallImg","switch","percent","module","exports","url","type","response","config","body","code","msg","totalCount","data","pageNo","pageSize","mockList","filter","item","indexOf","pageList","index"],"mappings":"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","sourcesContent":["const { mock } = require('mockjs')\nconst { handleRandomImage } = require('../utils')\n\nconst List = []\nconst count = 999\nfor (let i = 0; i < count; i++) {\n  List.push(\n    mock({\n      uuid: '@uuid',\n      id: '@id',\n      title: '@csentence(1, 2)',\n      'status|1': ['published', 'draft', 'deleted'],\n      author: '@cname',\n      datetime: '@datetime',\n      pageViews: '@integer(300, 5000)',\n      img: handleRandomImage(200, 200),\n      smallImg: handleRandomImage(40, 40),\n      switch: '@boolean',\n      percent: '@integer(80,99)',\n    })\n  )\n}\n\nmodule.exports = [\n  {\n    url: '/table/getList',\n    type: 'post',\n    response(config) {\n      if (!config.body) {\n        return {\n          code: 200,\n          msg: 'success',\n          totalCount: count,\n          data: mock({\n            'data|50': [\n              {\n                id: '@id',\n                title: '@csentence(1, 2)',\n                'status|1': ['published', 'draft', 'deleted'],\n                author: '@cname',\n                datetime: '@datetime',\n                pageViews: '@integer(300, 5000)',\n                img: handleRandomImage(200, 200),\n                smallImg: handleRandomImage(40, 40),\n                switch: '@boolean',\n                percent: '@integer(80,99)',\n              },\n            ],\n          }).data,\n        }\n      }\n      const { title = '', pageNo = 1, pageSize = 20 } = config.body\n      let mockList = List.filter((item) => {\n        return !(title && item.title.indexOf(title) < 0)\n      })\n      const pageList = mockList.filter(\n        (item, index) =>\n          index < pageSize * pageNo && index >= pageSize * (pageNo - 1)\n      )\n      return {\n        code: 200,\n        msg: 'success',\n        totalCount: count,\n        data: pageList,\n      }\n    },\n  },\n  {\n    url: '/table/doEdit',\n    type: 'post',\n    response() {\n      return {\n        code: 200,\n        msg: '模拟保存成功',\n      }\n    },\n  },\n  {\n    url: '/table/doDelete',\n    type: 'post',\n    response() {\n      return {\n        code: 200,\n        msg: '模拟删除成功',\n      }\n    },\n  },\n]\n"]}]}